{
  "name": "Deploy-Diagnostic-Settings-To-Sentinel",
  "type": "Microsoft.Authorization/policySetDefinitions",
  "apiVersion": "2021-06-01",
  "scope": null,
  "properties": {
    "policyType": "Custom",
    "displayName": "Deploy Diagnostic Settings for all resources to send Security Logs to Sentinel LAW",
    "description": "Deploy Diagnostic Settings for all resources to send Security Logs to Sentinel LAW when it not exists on deployment",
    "metadata": {
      "version": "1.0.0",
      "category": "Security-Logs",
      "alzCloudEnvironments": [
        "AzureCloud"
      ]
    },
    "parameters": {
      "effect": {
        "type": "String",
        "defaultValue": "DeployIfNotExists",
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Effect",
          "description": "Enable or disable the execution of the policy"
        }
      },
      "profileName": {
        "type": "String",
        "defaultValue": "setbypolicy",
        "metadata": {
          "displayName": "Profile name",
          "description": "The diagnostic settings profile name"
        }
      },
      "logAnalytics": {
        "type": "String",
        "metadata": {
          "displayName": "Log Analytics Workspace Id",
          "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
          "strongType": "omsWorkspace"
        }
      }
    },
    "policyDefinitions": {
      "policyDefinitionReferenceId": "DeployDiagnosticSettingsToLogAnalyticsWorkspace",
      "policyDefinitionId": "${varTargetManagementGroupResourceId}/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Analysis",
      "parameters": {
        "logAnalytics": {
          "value": "[[parameters('logAnalytics')]"
        },
        "effect": {
          "value": "[[parameters('effect')]"
        },
        "profileName": {
          "value": "[[parameters('profileName')]"
        }
      },
      "groupNames": []
    },
    "policyDefinitionGroups": null
  }
}